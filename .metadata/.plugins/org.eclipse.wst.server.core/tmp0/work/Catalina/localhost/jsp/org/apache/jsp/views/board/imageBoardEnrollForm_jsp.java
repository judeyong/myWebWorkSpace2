/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-03-18 05:18:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.jsp.member.model.vo.Member;

public final class imageBoardEnrollForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/board/../common/menubar.jsp", Long.valueOf(1710732174743L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("com.kh.jsp.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
 Member loginUser=(Member)session.getAttribute("loginUser");
	// 로그인 전 : menubar.jsp가 로딩될 때 null
	// 로그인 성공 후 :menubar.jsp가 로딩될 때 필드에 회원의 정보가 담겨있는 Member객체의 주소값  
	
	String contextPath = request.getContextPath();
	String alertMsg = (String)session.getAttribute("alertMsg");
	// System.out.println(alertMsg);
	// 로그인 성공 전 : alerMsg == null
	// 로그인 성공 후 : alerMsg == 메시지문구 
	
 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>헤더</title>\r\n");
      out.write("	\r\n");
      out.write("	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css\">\r\n");
      out.write("	<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("	<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("    <style>\r\n");
      out.write("        .login-area {\r\n");
      out.write("            float: right;\r\n");
      out.write("        }\r\n");
      out.write("		.menu{\r\n");
      out.write("			width: 200px;\r\n");
      out.write("			height: 50px;\r\n");
      out.write("			display: table-cell;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.menu > a {\r\n");
      out.write("			display: block;\r\n");
      out.write("			width: 100%;\r\n");
      out.write("			height: 100%;\r\n");
      out.write("			text-decoration: none;\r\n");
      out.write("			color: black;\r\n");
      out.write("			font-weight: bold;\r\n");
      out.write("			font-size: 20px;\r\n");
      out.write("			line-height: 50px;\r\n");
      out.write("		}\r\n");
      out.write("		.menu > a:hover{\r\n");
      out.write("			font-size: 21px;\r\n");
      out.write("			background-color: lightslategray;\r\n");
      out.write("		}\r\n");
      out.write("		.outer{\r\n");
      out.write("			width: 1200px;\r\n");
      out.write("			height: 1400px;\r\n");
      out.write("			margin: auto;\r\n");
      out.write("			border: 1px solid lightpink;\r\n");
      out.write("			padding-top: 15px;\r\n");
      out.write("			padding-bottom: 15px;\r\n");
      out.write("			margin-top: 10px;\r\n");
      out.write("		}\r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<script>\r\n");
      out.write("		// script태그 안에서도 스크립틀릿 같은 JSP요소를 사용할 수 있음	\r\n");
      out.write("		\r\n");
      out.write("		const msg = '");
      out.print( alertMsg );
      out.write("';\r\n");
      out.write("		\r\n");
      out.write("		if(msg != 'null'){\r\n");
      out.write("			alert(msg);\r\n");
      out.write("			\r\n");
      out.write("			// menubar.jsp가 로딩 될 때 마다 alert이 계속 수행됨\r\n");
      out.write("			// session에 들어있는 alrertMsg키값에 해당하는 밸류값을 지워줄 것!\r\n");
      out.write("			// xx.removeAttribute(\"키값\");\r\n");
      out.write("			");
 session.removeAttribute("alertMsg"); 
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("    <h1 align=\"center\">대답을 잘하자</h1>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"login-area\">\r\n");
      out.write("\r\n");
      out.write("        <!-- 사용자가 로그인 전 보게 될 화면(아이디 입력란 / 비밀번호 입력란 / 로그인버튼 / 회원가입)\r\n");
      out.write("\r\n");
      out.write("        <!-- \r\n");
      out.write("    	=> http://localhost:7777/jsp/서블릿매핑값\r\n");
      out.write("\r\n");
      out.write("    	form태그 내부에 존재하는 제출버튼(submit)클릭 시 form태그가 가지고 있는 속성 중\r\n");
      out.write("    	action속성에 작성된 url로 요청을 보내게됨(제출)\r\n");
      out.write("\r\n");
      out.write("    	==> Controller(Servlet)을 호출한다고 생각하면 됨\r\n");
      out.write("\r\n");
      out.write("    	* 경로 지정 방식\r\n");
      out.write("    	절대 경로 방식(/) : /Context Root/요청할 url	\r\n");
      out.write("                        localhost:포트번호 뒤에 action속성에 작성한 값이 붙으면서 요청\r\n");
      out.write("\r\n");
      out.write("    	상대 경로 방식(요청할url) :/없이 요청할 url문구로 시작하는 경우\r\n");
      out.write("                                            현재 이 페이지에 보여지는 url경로 중에서\r\n");
      out.write("                                            마지막 / 로부터 뒤에 action속성의 값이 붙으면서 요청\r\n");
      out.write("		-->\r\n");
      out.write("		\r\n");
      out.write("		");
if(loginUser == null) {
      out.write("\r\n");
      out.write("		<!-- <form action=\"/login\" method=\"post\"> -->\r\n");
      out.write("		<form action=\"");
      out.print(contextPath);
      out.write("/login\" method=\"post\">\r\n");
      out.write("		    <table>\r\n");
      out.write("		        <tr>\r\n");
      out.write("		            <th>아이디</th>\r\n");
      out.write("		            <td><input type=\"text\" name=\"userId\" required></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		        <tr>\r\n");
      out.write("		            <th>비밀번호</th>\r\n");
      out.write("		            <td><input type=\"password\" name=\"userPwd\" required></td>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		        <tr>\r\n");
      out.write("		            <th colspan=\"2\">\r\n");
      out.write("		                <button type=\"submit\" class=\"btn btn-sm btn-primary\">로그인</button>\r\n");
      out.write("		                <button type=\"button\" class=\"btn btn-sm btn-secondary\" onclick=\"enrollPage();\">회원가입</button>\r\n");
      out.write("		            </th>\r\n");
      out.write("		        </tr>\r\n");
      out.write("		    </table>\r\n");
      out.write("		</form>\r\n");
      out.write("		<script>\r\n");
      out.write("			function enrollPage() {\r\n");
      out.write("				// 페이지 이동\r\n");
      out.write("				// localhost:7777/jsp/views/member/memberEnrollForm.jsp\r\n");
      out.write("				// location.href = '");
      out.print(contextPath);
      out.write("/views/member/memberEnrollForm.jsp';\r\n");
      out.write("				// 프로젝트의 디렉토리 구조가 url에 노출됨 => 보안에 취약\r\n");
      out.write("				\r\n");
      out.write("				location.href = '");
      out.print( contextPath );
      out.write("/enrollForm.me';\r\n");
      out.write("				// 단순한 정적페이지 요청이지만 Servlet을 경유해서 띄어줄 것\r\n");
      out.write("				// localhost:7777/jsp/매핑값\r\n");
      out.write("				// => url에 서블릿매핑값까지만 노출됨\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		</script>\r\n");
      out.write("		");
} else { 
      out.write("\r\n");
      out.write("		<!-- 사용자가 로그인 성공 후 보게 될 화면-->\r\n");
      out.write("		<div id=\"user-info\">\r\n");
      out.write("		    <span>");
      out.print( loginUser.getUserName() );
      out.write("</span>님 환영합니다.<br><br>\r\n");
      out.write("		    <div>\r\n");
      out.write("		        <a href=\"");
      out.print( contextPath );
      out.write("/myPage\" class=\"btn btn-sm btn-primary\" >마이페이지</a>\r\n");
      out.write("		        <!-- <a href=\"/jsp/logout\">로그아웃</a> -->\r\n");
      out.write("		        <a href=\"");
      out.print( contextPath );
      out.write("/logout\" class=\"btn btn-sm btn-secondary\">로그아웃</a>\r\n");
      out.write("		    </div>\r\n");
      out.write("		</div>\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<br clear=\"both\">\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"nav-area\" align=\"center\">\r\n");
      out.write("		<div class=\"menu\"><a href=\"");
      out.print( contextPath );
      out.write("\">HOME</a></div>\r\n");
      out.write("		<div class=\"menu\"><a href=\"");
      out.print( contextPath );
      out.write("/noticeList\">공지사항</a></div>\r\n");
      out.write("		<div class=\"menu\"><a href=\"");
      out.print( contextPath );
      out.write("/boardList?currentPage=1\">일반게시판</a></div>\r\n");
      out.write("		<div class=\"menu\"><a href=\"");
      out.print( contextPath );
      out.write("/thumbnailList\">사진게시판</a></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"outer\">\r\n");
      out.write("        <br>\r\n");
      out.write("        <h2 align=\"center\">사진게시글 작성하기</h2>\r\n");
      out.write("        <br><br>\r\n");
      out.write("      \r\n");
      out.write("        <form action=\"");
      out.print( contextPath );
      out.write("/insert.image\" \r\n");
      out.write("         enctype=\"multipart/form-data\" method=\"post\" id=\"insert-form\" style=\"width:800px; margin: auto;\">\r\n");
      out.write("        \r\n");
      out.write("			<input type=\"hidden\" name=\"userNo\" value=\"");
      out.print( loginUser.getUserNo() );
      out.write("\" />\r\n");
      out.write("			\r\n");
      out.write("            <div class=\"form-group\" >\r\n");
      out.write("                <label for=\"usr\">제목</label>\r\n");
      out.write("                <input type=\"text\" class=\"form-control\" id=\"usr\" name=\"title\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"comment\">내용</label>\r\n");
      out.write("                <textarea class=\"form-control\" rows=\"15\" id=\"comment\" name=\"content\" style=\"resize: none;\"></textarea>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"form-group\"><br>\r\n");
      out.write("                <label>대표이미지</label>\r\n");
      out.write("                <img width=200 id=\"title-img\" height=100 src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQNN3hRy0nlgs3vdfK8K9ARSZBEhAHG0WE3I442b83XVeA8FMxSqkGOQ-UNDgvF0_Ee3oA&usqp=CAU\" alt=\"대표이미지\" >\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\"><br>\r\n");
      out.write("                <label>상세이미지-1</label>\r\n");
      out.write("                <img width=200 id=\"sub-img1\" height=100 src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSnWxw3jNUlCANwrkQnX_euFG-KgdN4vu9WX7GSUSQMJs5aQSBI4e9XQJYTYjrVuy7RmFU&usqp=CAU\" alt=\"상세이미지1\" >\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\"><br>\r\n");
      out.write("                <label>상세이미지-2</label>\r\n");
      out.write("                <img width=200 id=\"sub-img2\" height=100 src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6NC0ysKCCCZ6YsL5MrfHd0638U6dO2mQhGjONaMZntRtaosJcV3wkABTGLqaYaCQH6W0&usqp=CAU\" alt=\"상세이미지2\" >\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"form-group\"><br>\r\n");
      out.write("                <label>상세이미지-3</label>\r\n");
      out.write("                <img width=200 id=\"sub-img3\" height=100 src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT43-2IhqB0D0pqy-XkDiwTBpz_T1SeWXNcGa9w2LaS_06UD5dkwGFtVxu_wz_n6hK5M-Y&usqp=CAU\" alt=\"상세이미지3\" >\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div id=\"file-area\">\r\n");
      out.write("                <input type=\"file\" name=\"file1\" id=\"file1\" required onchange=\"loadImg(this, 1);\" >\r\n");
      out.write("                <input type=\"file\" name=\"file2\" id=\"file2\" onchange=\"loadImg(this, 2);\">\r\n");
      out.write("                <input type=\"file\" name=\"file3\" id=\"file3\" onchange=\"loadImg(this, 3);\">\r\n");
      out.write("                <input type=\"file\" name=\"file4\" id=\"file4\" onchange=\"loadImg(this, 4);\">\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <!-- onchange : input태그의 내용물이 변경되었을때 발생하는 이벤트 속성 -->\r\n");
      out.write("            <script>\r\n");
      out.write("                function loadImg(inputFile, num){\r\n");
      out.write("                    // inputFile : 현재 변화가 생긴 <input type=\"file\"> 요소 객체\r\n");
      out.write("                    // num : 몇 번 째 input요소인지 확인 후 해당 영역에 미리보기 하기위해 받음\r\n");
      out.write("                    // console.log(inputFile);\r\n");
      out.write("                    // console.log(inputFile.files);\r\n");
      out.write("\r\n");
      out.write("                    // files속성 : 업로드된 파일의 정보를 가지고 있음\r\n");
      out.write("                    // inputFile.files.length : 파일을 첨부 1, 선택 취소 0\r\n");
      out.write("                    // 파일이 첨부되었을 경우에는 inputFile.files[0]에 선택된 파일의 정보가 있음\r\n");
      out.write("\r\n");
      out.write("                    if(inputFile.files.length){ // 파일이 첨부\r\n");
      out.write("                        \r\n");
      out.write("                        // 선택된 파일을 읽어서 영역에 맞는 미리보기\r\n");
      out.write("                        // 파일을 읽어들일 FileReader객체 생성\r\n");
      out.write("                        \r\n");
      out.write("                        const reader = new FileReader();\r\n");
      out.write("\r\n");
      out.write("                        // console.log(inputFile.files[0]);\r\n");
      out.write("                        // reader객체를 가지고 파일을 읽어들이는 메소드를 호출\r\n");
      out.write("                        reader.readAsDataURL(inputFile.files[0]);\r\n");
      out.write("                        // 해당파일을 읽는 순간 파일만의 고유한 겂나긴 url이 만들어짐\r\n");
      out.write("                        // url을 src속성의 값으로 부여할 것\r\n");
      out.write("\r\n");
      out.write("                        // 파일을 읽기가 완료되면 실행할 이벤트 핸들러 정의\r\n");
      out.write("                        reader.onload = function(e){\r\n");
      out.write("\r\n");
      out.write("                            // e의 target => 이벤트가 발생한 친구\r\n");
      out.write("                            // console.log(e.target);\r\n");
      out.write("                            // e.target.result에 파일의 url에 담겨 있는\r\n");
      out.write("                            // 각 영역에 맞춰서 미리보기\r\n");
      out.write("\r\n");
      out.write("                            switch(num){\r\n");
      out.write("                                case 1 : $('#title-img').attr('src', e.target.result); break;\r\n");
      out.write("                                case 2 : $('#sub-img1').attr('src', e.target.result); break;\r\n");
      out.write("                                case 3 : $('#sub-img2').attr('src', e.target.result); break;\r\n");
      out.write("                                case 4 : $('#sub-img3').attr('src', e.target.result); break;\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    else {\r\n");
      out.write("                        const str = \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQNN3hRy0nlgs3vdfK8K9ARSZBEhAHG0WE3I442b83XVeA8FMxSqkGOQ-UNDgvF0_Ee3oA&usqp=CAU\";\r\n");
      out.write("\r\n");
      out.write("                        switch(num){\r\n");
      out.write("                            case 1: $('#title-img').attr('src', str); break;\r\n");
      out.write("                            case 2: $('#sub-img1').attr('src', str); break;\r\n");
      out.write("                            case 3: $('#sub-img2').attr('src', str); break;\r\n");
      out.write("                            case 4: $('#sub-img3').attr('src', str); break;\r\n");
      out.write("                        }\r\n");
      out.write("\r\n");
      out.write("                    }\r\n");
      out.write("                    \r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                $(function(){\r\n");
      out.write("                	$('#file-area').hide();\r\n");
      out.write("                	\r\n");
      out.write("                	$('#title-img').click(function(){\r\n");
      out.write("                		$('#file1').click();	\r\n");
      out.write("                	});\r\n");
      out.write("                	\r\n");
      out.write("                	$('#sub-img1').click(function(){\r\n");
      out.write("                		$('#file2').click();	\r\n");
      out.write("                	})\r\n");
      out.write("                	\r\n");
      out.write("                	$('#sub-img2').click(function(){\r\n");
      out.write("                		$('#file3').click();	\r\n");
      out.write("                	})\r\n");
      out.write("                	\r\n");
      out.write("                	$('#sub-img3').click(function(){\r\n");
      out.write("                		$('#file4').click();	\r\n");
      out.write("                	})\r\n");
      out.write("                });\r\n");
      out.write("                \r\n");
      out.write("            </script>\r\n");
      out.write("\r\n");
      out.write("            <div align=\"center\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-sm btn-info\" >등록하기</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-sm btn-secondary\" \r\n");
      out.write("                    onclick=\"history.back();\" >뒤로가기</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

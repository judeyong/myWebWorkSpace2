<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    <%@ page import="com.kh.model.vo.Person" %>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	<h1>EL 기본구문</h1>
	<h3>1. 기존 방식대로 스크립틀릿과 표현식을 이용해서 각 영역에 담겨있는 값을 뽑아서 화면에 출력</h3>
	<%--
	<%
	
		//requestScope에 담긴 값 뽑기 => classRoom, student
		String classRoom = (String)request.getAttribute("classRoom");
		Person student = (Person)request.getAttribute("student");
		
		//sessionScope에 담긴 값 뽑기 => academy, lecture
		String academy = (String)session.getAttribute("academy");
		Person lecture = (Person)session.getAttribute("lecture");
		
	%>

	<p>
		학원명 : <%= academy %> <br> 
		강의장 : <%= classRoom %><br>
		강사정보 : <%= lecture.getName() %>, <%= lecture.getAge() %>, <%= lecture.getAddress() %> <br>
		
		수강생정보 <br>
		<ul>
			<li>이름: <%= student.getName() %></li>
			<li>나이: <%= student.getAge() %></li>
			<li>주소: <%= student.getAddress() %></li>
		</ul> 
	</p>
	 --%>
	<hr>
	
	<h3>2. EL을 이용해서 request/session Scope에 담긴 값들을 출력</h3>
	
	<p>
		학원명 : ${ academy }  <br> 
		강의장 : ${ classRoom } <br>
		강사정보 : ${ lecture.name }, ${ lecture.age }, ${ lecture.address }<br>
		
		<!-- 
			필드값에 직접접근 X
			name -> getName()
			내부적으로 getter메소드를 찾아서 호출해서 값을 출력해주는 구조
			=> 항상 명심해야할 사항 : getter메소드를 꼭 만들어야함
			
			lecture에 접근했을 때 value값은 Person타입 객체
			해당 Person각체의 각 필드에 담긴 값을 출력하고자 한다면 키값, 필드명으로 접근하면 됨(눈에 보이는 코드상)
			
			=> 해당 필드에 네이밍컨벤션에 부합하는 getter를 찾아서 호출해주는 구조
			
		 -->
		
		수강생정보 <br>
		<ul>
			<li>이름: ${ student.name }</li>
			<li>나이: ${ student.age }</li>
			<li>주소: ${ student.address }</li>
		</ul> 
	</p>
	
	
	<h4>여러분들이 많이 한 실수</h4>
	
	<p>없는 키값을 통해 출력한 경우</p>
	<p>출력식을 이용한 출력 : &lt;%= num %&gt;</p>
	<p>EL구문을 이용해서 없는 키값을 제시하는 경우 : ${ abcd }</p> <!-- 아무것도 출력 안됨 -->
	
	
	<h3>3. EL 사용시 객체들의 저장된 키값이 동일한 경우</h3>
	
	scope키값에 담긴 밸류 값: ${ scope } <br>
	
	<!-- 
		EL구문은 공유범위가 가장 작은 scope에서부터 해당 키값을 검색함
		page => request => session => application순으로 키값을 찾음
		
		만약에 모든 영역에서 해당 키에 담긴 값을 못찾았다?
		출력안됨
		오류가 안남
	 -->
	
	<h3>4. 직접 Scope영역을 지정해서 접근하기</h3>
	<%
		// pageScope에 담기
		pageContext.setAttribute("scope", "page");
		
	
	%>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</body>
</html>
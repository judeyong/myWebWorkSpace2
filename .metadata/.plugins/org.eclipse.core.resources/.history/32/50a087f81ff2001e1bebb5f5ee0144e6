<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

	<h1>JSTL Core Library</h1>
	
	<h3>1. 변수(속성 == Attribute)</h3>

	<pre>
		* 변수 선언 (&lt; c:set var="변수명" value="리터럴값" scope="스코프영역지정(생략가능)"/&gt;)
		- 속성을 선언하고 초기값을 대입할 수 있는 태그
		- 더 나아가서 어떤 scope영역에 담아둘건지 지정 가능함(생략 시 pageScope에 담김)
		
		=> 해당 scope영역에 setAttribute라는 메소드를 이용해서 key+ value형태로 데이터를 담아둔다 라고 생각하면 됨
		=> set태그를 통해 선언된 속성 같은 경우 EL 구문으로 접근해서 사용가능(스크립팅 요소를 접근 불가능)
		
		* 주의사항
		- 타입을 별도로 지정하지 않음
		- 반드시! *해당 속성에 담아두고자하는 값(value속성에 담긴 리터럴)을 무조건 세팅해야함!
		(초기값을 반드시 넣어줘야함 선언과 동시에 초기화)
	</pre>
	
	<c:set var="num1" value="10" /> <!-- pageScope에 담김 pageContext.setAttribute("num1", "10"); -->
	<c:set var="num2" value="20" scope="request" /> <!--requestScope에 담김 request.setAttribute("num2", "20"); --> 
	
	num1의 값 : ${ num1 } <br>
	num2의 값 : ${ num2 } <br>
	
	<c:set var="result" value="${ num1 + num2}" scope="session" /> <!-- sessionScope에 담김 -->
	
	result 값 : ${ result }<br>
	
	<!--
		EL 구문을 사용할 때 속성명만 제시하면 공유범위가 작은곳에서 부터 찾게됨
		: 티가 나지는 않지만 찾아가는것에 대한 시간이 걸림(스코프영역.속성명) 
		
	-->
	${ pageScope.num1 } <br>
	${ pageScope.num2 } <br>
	${ sessionScope.result } <br>
	
	<c:set var="result" scope="request">9999</c:set>
	<!-- value 속성말고 시작태그와 종료태그 사이에도 대입할 값을 기술 할 수 있음 -->
	
	${ sessionScope.result }
	
	<hr>
	
	<pre>
		* 속성 삭제(&lt;c:remove var="제거하고자하는 속성명" scope="스코프영역지정(생략가능)"/&gt;)
	
	</pre>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</body>
</html>
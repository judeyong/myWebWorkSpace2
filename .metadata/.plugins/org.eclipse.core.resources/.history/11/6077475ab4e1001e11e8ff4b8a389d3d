package com.kh.jsp.board.model.dao;

import static com.kh.jsp.common.JDBCTemplate.close;

import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Properties;

import com.kh.jsp.board.model.vo.Board;
import com.kh.jsp.common.model.vo.PageInfo;

public class BoardDao {
	
	private Properties prop = new Properties();
	
	public BoardDao() {
	
		String filePath = BoardDao.class.getResource("/sql/board/board-mapper.xml")
									    .getPath();
		
		//System.out.println(filePath);
		
		try {
			prop.loadFromXML(new FileInputStream(filePath));
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	public int selectListCount(Connection conn) {
		
		int listCount = 0;
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		String sql = prop.getProperty("selectListCount");
		
		try {
			pstmt = conn.prepareStatement(sql);
			
			rset = pstmt.executeQuery();
			
			rset.next();
			
			listCount = rset.getInt("COUNT(*)");
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(rset);
			close(pstmt);
		}
		return listCount;
	}
	
	public ArrayList<Board> selectList(Connection conn, PageInfo pi){
		ArrayList<Board> list = new ArrayList();
		PreparedStatement pstmt = null;
		ResultSet rset = null;
		String sql = prop.getProperty("selectList");
		
		try {
			pstmt = conn.prepareStatement(sql);
			// 인라인뷰 활용
			// 1) ORDER BY절 순서가 가장 마지막인데 정렬이 먼저 끝나 있는 ResultSet이 필요함
			// => 일단 정렬을 해주는 서브쿼리를 만들고
			// 2) 1) 서 만들어진 서브쿼리를 FROM절에 사용해서 + ROWNUM
			
			/*
			 * boardLimit이 10이라는 가정하에
			 * currentPage == 1 => 시작값은 1, 끝값 10
			 * currentPage == 2 => 시작값은 11, 끝값 20
			 * currentPage == 3 => 시작값은 21, 끝값 30
			 * 
			 * 시작값 = (pi.getCurrentPage() -1 ) * pi.getBoardLimit() + 1;
			 * 끝값 = 시작값 + pi.getBoardLimit() - 1;
			 * 
			 */
			
			int startRow = (pi.getCurrentPage() -1 ) * pi.getBoardLimit() + 1;
			int endRow = startRow + pi.getBoardLimit() - 1;
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return list;
	}
	
	
	
	
	
	
}
